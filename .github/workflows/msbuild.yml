name: Build and Release WireGuard for Windows

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Restore NuGet packages
      run: nuget restore

    - name: Build WireGuard
      run: msbuild /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=${{ env.BUILD_PLATFORM }} /p:DeployOnBuild=true /p:PublishProfile=FolderProfile

    - name: Run tests
      run: msbuild /t:Test /p:Configuration=${{ env.BUILD_CONFIGURATION }}

    - name: Create release artifacts
      run: |
        $version = (Get-Item ".\amd64\Release\WireGuard.exe").VersionInfo.FileVersion
        mkdir artifacts
        Compress-Archive -Path ".\amd64\Release\*" -DestinationPath "artifacts\WireGuard-$version.zip"
        Compress-Archive -Path ".\x86\Release\*" -DestinationPath "artifacts\WireGuard-$version-x86.zip"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wireguard-binaries
        path: artifacts/*.zip

  create-release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: wireguard-binaries
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./artifacts/*.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sign-and-publish:
    needs: build
    runs-on: windows-latest
    if: success() && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: wireguard-binaries
        path: ./artifacts

    #- name: Code signing (optional)
    #  if: ${{ secrets.SIGNING_CERT != '' }}
    #  run: |
    #   # 这里添加代码签名步骤
    #    # 需要配置相应的签名证书和密码
    #    echo "Code signing would happen here"

    - name: Publish to GitHub Releases
      uses: softprops/action-gh-release@v2
      with:
        files: ./artifacts/*.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
