name: Build and Release WireGuard for Windows

on:
  push:
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

env:
  PLATFORM: x64
  CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install nasm
      run: choco install nasm -y
    
   
    - name: Install WiX Toolset and 7zip
      run: |
        choco install wixtoolset -y
        choco install 7zip -y
        

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    #- name: Display build environment
    #  run: |
    #    go version
    #    rustc --version
    #    nasm -v
    #    heat -?

    - name: Build using build.bat
      run: |
        .\build.bat

    #- name: Run tests
    #  run: |
    #    go test ./...

    - name: Create release package
      run: |
        mkdir artifacts
        # 复制构建产物
        Copy-Item ".\x64\Release\*.exe" -Destination ".\artifacts\" -ErrorAction SilentlyContinue
        Copy-Item ".\x64\Release\*.dll" -Destination ".\artifacts\" -ErrorAction SilentlyContinue
        Copy-Item ".\*.msi" -Destination ".\artifacts\" -ErrorAction SilentlyContinue
        
        # 如果有其他架构的构建，也包含进来
        if (Test-Path ".\x86\Release") {
            mkdir artifacts\x86
            Copy-Item ".\x86\Release\*" -Destination ".\artifacts\x86\" -ErrorAction SilentlyContinue
        }
        
        # 创建zip包
        7z a wireguard-binaries.zip .\artifacts\*

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wireguard-binaries
        path: |
          wireguard-binaries.zip
          artifacts/*.msi
          artifacts/*.exe
          artifacts/*.dll
